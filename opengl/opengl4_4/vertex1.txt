#version 330


uniform mat4 viewMatrix, projMatrix, eyeViewMatrix;
uniform mat3 NormalMatrix;
uniform mat3 NormalViewMatrix;


in vec4 color;
in vec3 VertexNormal;
in vec4 position;
in vec3 lightPos;

in vec2 in_tex_coord;


out vec4 Color;
out vec3 Normal;
out vec4 Position; // adding position, so we know where we are
out vec3 LightPos;
out vec3 NormalView;

out vec2 vs_tex_coord;


void main()
{
	
	Color = color;
	//Normal = normalize( transpose(inverse(NormalMatrix)) * VertexNormal);
	Normal = normalize( NormalMatrix * VertexNormal);
	Position = viewMatrix * position; // pre-perspective space
	gl_Position = projMatrix * viewMatrix * position;

	

	//Position = vec3 (view_mat * model_mat * vertex_position);
	//Normal = vec3 (view_mat * model_mat * vec4 (vertex_normal, 0.0));
	//gl_Position = projMatrix * vec4 (position_eye, 1.0);
	
}
